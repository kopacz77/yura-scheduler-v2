name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: postgresql://test:test@localhost:5432/test_db
      NEXTAUTH_SECRET: test_secret
      NEXTAUTH_URL: http://localhost:3000

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Cache Prisma
      uses: actions/cache@v3
      with:
        path: node_modules/.prisma
        key: prisma-${{ hashFiles('prisma/schema.prisma') }}

    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Run Prisma Migrations
      run: npx prisma migrate deploy

    - name: Check formatting
      run: npx prettier --check .

    - name: Run ESLint
      run: npm run lint

    - name: Type check
      run: npm run typecheck

    - name: Run Tests
      run: npm test
      env:
        CI: true

    - name: Build application
      run: npm run build

  security:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit

    - name: Check for outdated dependencies
      run: npm outdated || true

  e2e:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npm run test:e2e

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
